sorted[length(sorted[,1])]
}else if (num < length(sorted[,1])){
num <- as.numeric(num)
sorted[num]
}else{
return(NA)
}
}
rankAll("heart attack", 20)
rankAll <- function (outcome, num = "best"){
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomeNum <- 0
if (outcome == "heart attack"){
outcomeNum <- 11
}else if (outcome == "heart failure"){
outcomeNum <- 17
}else if (outcome == "pneumonia"){
outcomeNum <- 23
}else(
stop("invalid outcome")
)
states <- factor(data[,7])
result <- tapply(data, states, rankHospital, data,outcomeNum, num)
print (result)
}
rankHospital <- function(state,outcomeNum, num){
state <- na.omit(state[order(state[,outcomeNum],state[,2]),])
sorted <- cbind(state[,2], state[,outcomeNum])
if (num == "best"){
sorted[1]
}else if (num == "worst"){
sorted[length(sorted[,1])]
}else if (num < length(sorted[,1])){
num <- as.numeric(num)
sorted[num]
}else{
return(NA)
}
}
rankAll("heart attack", 20)
rankAll <- function (outcome, num = "best"){
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomeNum <- 0
if (outcome == "heart attack"){
outcomeNum <- 11
}else if (outcome == "heart failure"){
outcomeNum <- 17
}else if (outcome == "pneumonia"){
outcomeNum <- 23
}else(
stop("invalid outcome")
)
states <- factor(data[,7])
result <- tapply(data[,outcomeNum], states, rankHospital, data,outcomeNum, num, SIMPLIFY = TRUE)
print (result)
}
rankHospital <- function(state,outcomeNum, num){
state <- na.omit(state[order(state[,outcomeNum],state[,2]),])
sorted <- cbind(state[,2], state[,outcomeNum])
if (num == "best"){
sorted[1]
}else if (num == "worst"){
sorted[length(sorted[,1])]
}else if (num < length(sorted[,1])){
num <- as.numeric(num)
sorted[num]
}else{
return(NA)
}
}
rankAll("heart attack", 20)
rankAll <- function (outcome, num = "best"){
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomeNum <- 0
if (outcome == "heart attack"){
outcomeNum <- 11
}else if (outcome == "heart failure"){
outcomeNum <- 17
}else if (outcome == "pneumonia"){
outcomeNum <- 23
}else(
stop("invalid outcome")
)
states <- factor(data[,7])
result <- tapply(data[,outcomeNum], states, rankHospital, data, outcomeNum, num, SIMPLIFY = TRUE)
print (result)
}
rankHospital <- function(data,outcomeNum, num){
state <- data[data$State == state,]
state <- na.omit(state[order(state[,outcomeNum],state[,2]),])
sorted <- cbind(state[,2], state[,outcomeNum])
if (num == "best"){
sorted[1]
}else if (num == "worst"){
sorted[length(sorted[,1])]
}else if (num < length(sorted[,1])){
num <- as.numeric(num)
sorted[num]
}else{
return(NA)
}
}
rankAll("heart attack", 20)
rankAll <- function (outcome, num = "best"){
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomeNum <- 0
if (outcome == "heart attack"){
outcomeNum <- 11
}else if (outcome == "heart failure"){
outcomeNum <- 17
}else if (outcome == "pneumonia"){
outcomeNum <- 23
}else(
stop("invalid outcome")
)
states <- factor(data[,7])
result <- tapply(data[,outcomeNum], states, rankHospital, data, outcomeNum, num)
print (result)
}
rankHospital <- function(data,outcomeNum, num){
state <- data[data$State == state,]
state <- na.omit(state[order(state[,outcomeNum],state[,2]),])
sorted <- cbind(state[,2], state[,outcomeNum])
if (num == "best"){
sorted[1]
}else if (num == "worst"){
sorted[length(sorted[,1])]
}else if (num < length(sorted[,1])){
num <- as.numeric(num)
sorted[num]
}else{
return(NA)
}
}
rankAll("heart attack", 20)
rankAll <- function (outcome, num = "best"){
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomeNum <- 0
if (outcome == "heart attack"){
outcomeNum <- 11
}else if (outcome == "heart failure"){
outcomeNum <- 17
}else if (outcome == "pneumonia"){
outcomeNum <- 23
}else(
stop("invalid outcome")
)
states <- factor(data[,7])
result <- tapply(data[,outcomeNum], states, Simplify = TRUE, rankHospital, data, outcomeNum, num)
print (result)
}
rankHospital <- function(data,outcomeNum, num){
state <- data[data$State == state,]
state <- na.omit(state[order(state[,outcomeNum],state[,2]),])
sorted <- cbind(state[,2], state[,outcomeNum])
if (num == "best"){
sorted[1]
}else if (num == "worst"){
sorted[length(sorted[,1])]
}else if (num < length(sorted[,1])){
num <- as.numeric(num)
sorted[num]
}else{
return(NA)
}
}
rankAll("heart attack", 20)
rankAll <- function (outcome, num = "best"){
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomeNum <- 0
if (outcome == "heart attack"){
outcomeNum <- 11
}else if (outcome == "heart failure"){
outcomeNum <- 17
}else if (outcome == "pneumonia"){
outcomeNum <- 23
}else(
stop("invalid outcome")
)
states <- factor(data[,7])
result <- tapply(data[,outcomeNum], states, Simplify = TRUE, rankHospital, data, outcomeNum, num)
print (result)
}
rankHospital <- function(data,outcomeNum, num){
state <- data[data$State == state,]
state <- na.omit(state[order(state[,outcomeNum],state[,2]),])
sorted <- cbind(state[,2], state[,outcomeNum])
if (num == "best"){
sorted[1]
}else if (num == "worst"){
sorted[length(sorted[,1])]
}else if (num < length(sorted[,1])){
num <- as.numeric(num)
sorted[num]
}else{
return(NA)
}
}
rankAll("heart attack", 20)
rankAll <- function (outcome, num = "best"){
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomeNum <- 0
if (outcome == "heart attack"){
outcomeNum <- 11
}else if (outcome == "heart failure"){
outcomeNum <- 17
}else if (outcome == "pneumonia"){
outcomeNum <- 23
}else(
stop("invalid outcome")
)
states <- factor(data[,7])
result <- tapply(data[,outcomeNum], states, rankHospital,  Simplify = TRUE, data)
print (result)
rankHospital <- function(data){
state <- data[data$State == state,]
state <- na.omit(state[order(state[,outcomeNum],state[,2]),])
sorted <- cbind(state[,2], state[,outcomeNum])
if (num == "best"){
sorted[1]
}else if (num == "worst"){
sorted[length(sorted[,1])]
}else if (num < length(sorted[,1])){
num <- as.numeric(num)
sorted[num]
}else{
return(NA)
}
}
}
rankAll("heart attack", 20)
rankAll <- function (outcome, num = "best"){
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomeNum <- 0
if (outcome == "heart attack"){
outcomeNum <- 11
}else if (outcome == "heart failure"){
outcomeNum <- 17
}else if (outcome == "pneumonia"){
outcomeNum <- 23
}else(
stop("invalid outcome")
)
states <- factor(data[,7])
result <- tapply(data[,outcomeNum], states, rankHospital, data)
print (result)
rankHospital <- function(data){
state <- data[data$State == state,]
state <- na.omit(state[order(state[,outcomeNum],state[,2]),])
sorted <- cbind(state[,2], state[,outcomeNum])
if (num == "best"){
sorted[1]
}else if (num == "worst"){
sorted[length(sorted[,1])]
}else if (num < length(sorted[,1])){
num <- as.numeric(num)
sorted[num]
}else{
return(NA)
}
}
}
rankAll("heart attack", 20)
rankAll <- function (outcome, num = "best"){
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomeNum <- 0
if (outcome == "heart attack"){
outcomeNum <- 11
}else if (outcome == "heart failure"){
outcomeNum <- 17
}else if (outcome == "pneumonia"){
outcomeNum <- 23
}else(
stop("invalid outcome")
)
states <- factor(data[,7])
result <- tapply(data[,outcomeNum], states, rankHospital)
print (result)
rankHospital <- function(){
state <- data[data$State == state,]
state <- na.omit(state[order(state[,outcomeNum],state[,2]),])
sorted <- cbind(state[,2], state[,outcomeNum])
if (num == "best"){
sorted[1]
}else if (num == "worst"){
sorted[length(sorted[,1])]
}else if (num < length(sorted[,1])){
num <- as.numeric(num)
sorted[num]
}else{
return(NA)
}
}
}
rankAll("heart attack", 20)
rankAll <- function (outcome, num = "best"){
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomeNum <- 0
if (outcome == "heart attack"){
outcomeNum <- 11
}else if (outcome == "heart failure"){
outcomeNum <- 17
}else if (outcome == "pneumonia"){
outcomeNum <- 23
}else(
stop("invalid outcome")
)
states <- factor(data[,7])
result <- tapply(data[,outcomeNum], states, rankHospital)
print (result)
rankHospital <- function(){
state <- data[data$State == state,]
state <- na.omit(state[order(state[,outcomeNum],state[,2]),])
sorted <- cbind(state[,2], state[,outcomeNum])
if (num == "best"){
sorted[1]
}else if (num == "worst"){
sorted[length(sorted[,1])]
}else if (num < length(sorted[,1])){
num <- as.numeric(num)
sorted[num]
}else{
return(NA)
}
}
}
rankAll("heart attack", 20)
rankAll <- function (outcome, num = "best"){
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomeNum <- 0
if (outcome == "heart attack"){
outcomeNum <- 11
}else if (outcome == "heart failure"){
outcomeNum <- 17
}else if (outcome == "pneumonia"){
outcomeNum <- 23
}else(
stop("invalid outcome")
)
states <- factor(data[,7])
result <- tapply(data[,outcomeNum], states, rankHospital, simplify = TRUE)
print (result)
rankHospital <- function(){
state <- data[data$State == state,]
state <- na.omit(state[order(state[,outcomeNum],state[,2]),])
sorted <- cbind(state[,2], state[,outcomeNum])
if (num == "best"){
sorted[1]
}else if (num == "worst"){
sorted[length(sorted[,1])]
}else if (num < length(sorted[,1])){
num <- as.numeric(num)
sorted[num]
}else{
return(NA)
}
}
}
rankAll("heart attack", 20)
rankAll <- function (outcome, num = "best"){
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomeNum <- 0
if (outcome == "heart attack"){
outcomeNum <- 11
}else if (outcome == "heart failure"){
outcomeNum <- 17
}else if (outcome == "pneumonia"){
outcomeNum <- 23
}else(
stop("invalid outcome")
)
states <- factor(data[,7])
result <- tapply(data[,outcomeNum], states, rankHospital, simplify = TRUE)
print (result)
rankHospital <- function(input){
input <- sort(input)
if (num == "best"){
sorted[1]
}else if (num == "worst"){
sorted[length(sorted[,1])]
}else if (num < length(sorted[,1])){
num <- as.numeric(num)
sorted[num]
}else{
return(NA)
}
}
}
rankAll("heart attack", 20)
rankAll <- function (outcome, num = "best"){
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomeNum <- 0
if (outcome == "heart attack"){
outcomeNum <- 11
}else if (outcome == "heart failure"){
outcomeNum <- 17
}else if (outcome == "pneumonia"){
outcomeNum <- 23
}else(
stop("invalid outcome")
)
states <- factor(data[,7])
result <- tapply(data[,outcomeNum], states, rankHospital, simplify = TRUE)
print (result)
rankHospital <- function(input){
input <- sort(input)
if (num == "best"){
input[1]
}else if (num == "worst"){
input[length(input)]
}else if (num < length(input)){
num <- as.numeric(num)
input[num]
}else{
return(NA)
}
}
}
rankAll("heart attack", 20)
rankAll("heart attack", 20)
rankAll <- function (outcome, num = "best"){
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomeNum <- 0
if (outcome == "heart attack"){
outcomeNum <- 11
}else if (outcome == "heart failure"){
outcomeNum <- 17
}else if (outcome == "pneumonia"){
outcomeNum <- 23
}else(
stop("invalid outcome")
)
states <- factor(data[,7])
result <- tapply(data[,outcomeNum], states, rankHospital, simplify = TRUE)
print (result)
rankHospital <- function(input){
input <- sort(input)
if (num == "best"){
input[1]
}else if (num == "worst"){
input[length(input)]
}else if (num < length(input)){
num <- as.numeric(num)
sorted[num]
}else{
return(NA)
}
}
}
rankAll("heart attack", 20)
rankAll("heart attack", 20)
rankAll <- function (outcome, num = "best"){
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomeNum <- 0
if (outcome == "heart attack"){
outcomeNum <- 11
}else if (outcome == "heart failure"){
outcomeNum <- 17
}else if (outcome == "pneumonia"){
outcomeNum <- 23
}else(
stop("invalid outcome")
)
states <- factor(data[,7])
result <- tapply(data[,outcomeNum], states, rankHospital, simplify = TRUE)
print (result)
rankHospital <- function(input){
input <- sort(input)
if (num == "best"){
input[1]
}else if (num == "worst"){
input[length(input)]
}else if (num < length(input)){
num <- as.numeric(num)
sorted[num]
}else{
return(NA)
}
}
}
rankAll("heart attack", 20)
rankAll("heart attack", 20)
rankAll <- function (outcome, num = "best"){
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomeNum <- 0
if (outcome == "heart attack"){
outcomeNum <- 11
}else if (outcome == "heart failure"){
outcomeNum <- 17
}else if (outcome == "pneumonia"){
outcomeNum <- 23
}else(
stop("invalid outcome")
)
states <- factor(data[,7])
result <- tapply(data[,outcomeNum], states, rankHospital, simplify = TRUE)
print (result)
rankHospital <- function(input){
input <- sort(input)
if (num == "best"){
input[1]
}else if (num == "worst"){
input[length(input)]
}else if (num < length(input)){
num <- as.numeric(num)
sorted[num]
}else{
return(NA)
}
}
}
rankAll("heart attack", 20)
